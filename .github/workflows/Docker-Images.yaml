name: Build and Push to ECR

on:
  workflow_dispatch:
    inputs:
      ACTION:
        description: "Choose option build"
        required: true
        default: "build"
        type: choice
        options:
          - build

env:
  ECR_REPO_PREFIX: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com" 

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: Build and push Docker images for each service
      - name: Build and push Docker images
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          # Define services and their paths
          services=("authService" "companyService" "userService")
          BUILD_ID="${{ github.run_number }}"  # Use GitHub run number as the tag

          for service in "${services[@]}"; do
            # Convert service name to lowercase for Docker compatibility
            lowercase_service=$(echo "$service" | tr '[:upper:]' '[:lower:]')

            # Define paths and image name
            service_path="./backend/$service"
            image_name="${{ env.ECR_REPO_PREFIX }}/lucky_${lowercase_service}:${BUILD_ID}"

            echo "Building and pushing $service image with tag: $BUILD_ID..."

            # Build the Docker image
            docker build -t "$image_name" "$service_path"

            # Push the image to ECR
            docker push "$image_name"

            echo "Successfully pushed $service image to $image_name"
          done
